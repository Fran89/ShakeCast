#!/usr/local/bin/perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../../lib";

use Carp;

use CGI;
use JSON::XS;

use SC;
use API::Product;
use API::APIUtil;

SC->initialize;
my $default_options = API::APIUtil::config_options();

my $self = new CGI;
my (@args) = split '/', $ENV{PATH_INFO};
shift @args;
my $action = shift @args;

print "Content-Type: application/json\n\n";
if (not defined *{$action} ) {
} else {
    SC->log(0, "user: task is $action $args[0]");

	no strict 'refs';
    # perform the requested action
    #eval {
	my $json =  &{ $action }( @args );
	print JSON::XS->new->utf8->encode(API::APIUtil::stringfy($json));
    #};
}

    # Authenticated
sub from_id {
	my ($shakemap) = @_;

	my ($shakemap_id, $shakemap_version) = split '-', $shakemap;
	my $product = new API::Product->from_id($shakemap_id, $shakemap_version);

	return $product;
}


